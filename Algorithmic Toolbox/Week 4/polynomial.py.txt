def karatsuba(x, y):
    # Base case for recursion
    if x < 10 or y < 10:
        return x * y

    # Calculate the size of the numbers
    max_len = max(len(str(x)), len(str(y)))
    half_len = max_len // 2

    # Split the digit sequences in the middle
    high1, low1 = divmod(x, 10**half_len)
    high2, low2 = divmod(y, 10**half_len)

    # 3 recursive calls
    z0 = karatsuba(low1, low2)          # z0 = low1 * low2
    z1 = karatsuba((low1 + high1), (low2 + high2))  # z1 = (low1 + high1) * (low2 + high2)
    z2 = karatsuba(high1, high2)        # z2 = high1 * high2

    # Combine the results
    return (z2 * 10**(2 * half_len)) + ((z1 - z2 - z0) * 10**half_len) + z0

# Example usage
poly1 = 1234  # Represents the polynomial 1x^3 + 2x^2 + 3x + 4
poly2 = 5678  # Represents the polynomial 5x^3 + 6x^2 + 7x + 8
result = karatsuba(poly1, poly2)
print("Result of multiplication:", result)